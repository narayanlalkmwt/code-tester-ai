import random

class Java:
    beginner = {
        1: 'Write a Java program to add an integer and a float number.',
        2: 'Write a Java program to find the square of a number.',
        3: 'Write a Java program to check if a number is even or odd.',
        4: 'Write a Java program to find the factorial of a number.',
        5: 'Write a Java program to check if a number is prime.',
        6: 'Write a Java program to print the first 10 natural numbers.',
        7: 'Write a Java program to calculate the area of a circle.',
        8: 'Write a Java program to convert Celsius to Fahrenheit.',
        9: 'Write a Java program to reverse a given string.',
        10: 'Write a Java program to find the largest of three numbers.',
        11: 'Write a Java program to calculate the sum of digits of a number.',
        12: 'Write a Java program to find the greatest common divisor (GCD) of two numbers.',
        13: 'Write a Java program to check if a string is a palindrome.',
        14: 'Write a Java program to find the smallest of three numbers.',
        15: 'Write a Java program to calculate the area of a rectangle.',
        16: 'Write a Java program to display the Fibonacci series up to n terms.',
        17: 'Write a Java program to find the sum of all even numbers between 1 and 100.',
        18: 'Write a Java program to swap two numbers without using a temporary variable.',
        19: 'Write a Java program to count the number of vowels in a string.',
        20: 'Write a Java program to find the average of an array of integers.',
        21: 'Write a Java program to print a multiplication table for a given number.',
        22: 'Write a Java program to determine if a given number is a perfect number.',
        23: 'Write a Java program to convert a number to its binary representation.',
        24: 'Write a Java program to find the sum of all odd numbers between 1 and 100.',
        25: 'Write a Java program to remove all duplicate elements from an array.',
        26: 'Write a Java program to sort an array of integers in ascending order.',
        27: 'Write a Java program to merge two arrays into one.',
        28: 'Write a Java program to find the length of a string.',
        29: 'Write a Java program to replace all occurrences of a substring in a string.',
        30: 'Write a Java program to convert a string to uppercase.',
        31: 'Write a Java program to find the frequency of each character in a string.',
        32: 'Write a Java program to print the current date and time.',
        33: 'Write a Java program to perform matrix addition.',
        34: 'Write a Java program to perform matrix multiplication.',
        35: 'Write a Java program to find the transpose of a matrix.',
        36: 'Write a Java program to calculate the power of a number.',
        37: 'Write a Java program to check if a number is a perfect square.',
        38: 'Write a Java program to find the maximum and minimum element in an array.',
        39: 'Write a Java program to count the number of elements in an array.',
        40: 'Write a Java program to find the median of an array of integers.',
        41: 'Write a Java program to find the sum of all digits of a number using recursion.',
        42: 'Write a Java program to find the Nth Fibonacci number using recursion.',
        43: 'Write a Java program to implement a basic calculator (addition, subtraction, multiplication, division).',
        44: 'Write a Java program to check if a number is a power of two.',
        45: 'Write a Java program to print the ASCII value of a given character.',
        46: 'Write a Java program to check if a string contains only digits.',
        47: 'Write a Java program to find the common elements between two arrays.',
        48: 'Write a Java program to find the sum of elements in a 2D array.',
        49: 'Write a Java program to find the maximum value in a 2D array.',
        50: 'Write a Java program to find the minimum value in a 2D array.',
        51: 'Write a Java program to rotate an array to the right by a given number of positions.',
        52: 'Write a Java program to find all prime numbers between 1 and 100.',
        53: 'Write a Java program to print the first N prime numbers.',
        54: 'Write a Java program to check if a string contains a specific substring.',
        55: 'Write a Java program to remove all whitespace from a string.',
        56: 'Write a Java program to find the intersection of two arrays.',
        57: 'Write a Java program to find the union of two arrays.',
        58: 'Write a Java program to reverse the words in a string.',
        59: 'Write a Java program to implement a simple number guessing game.',
        60: 'Write a Java program to create a basic employee management system using arrays.',
        61: 'Write a Java program to read a file and display its content.',
        62: 'Write a Java program to write data to a file.',
        63: 'Write a Java program to read user input from the console.',
        64: 'Write a Java program to perform basic arithmetic operations using methods.',
        65: 'Write a Java program to calculate the area and perimeter of a triangle.',
        66: 'Write a Java program to find the first non-repeating character in a string.',
        67: 'Write a Java program to remove duplicates from a list.',
        68: 'Write a Java program to find the longest word in a sentence.',
        69: 'Write a Java program to sort a list of strings alphabetically.',
        70: 'Write a Java program to count the number of words in a sentence.',
        71: 'Write a Java program to replace all occurrences of a character in a string.',
        72: 'Write a Java program to split a string into an array of words.',
        73: 'Write a Java program to capitalize the first letter of each word in a string.',
        74: 'Write a Java program to check if a given string starts with a specific prefix.',
        75: 'Write a Java program to check if a given string ends with a specific suffix.',
        76: 'Write a Java program to format a string with specified width and alignment.',
        77: 'Write a Java program to generate a random number between 1 and 100.',
        78: 'Write a Java program to calculate the sum of squares of integers from 1 to N.',
        79: 'Write a Java program to calculate the average of an array of double values.',
        80: 'Write a Java program to count the number of uppercase and lowercase letters in a string.',
        81: 'Write a Java program to check if a given year is a leap year.',
        82: 'Write a Java program to find the largest element in a list.',
        83: 'Write a Java program to find the smallest element in a list.',
        84: 'Write a Java program to convert a list to an array.',
        85: 'Write a Java program to convert an array to a list.',
        86: 'Write a Java program to create a list of even numbers from 1 to 100.',
        87: 'Write a Java program to create a list of odd numbers from 1 to 100.',
        88: 'Write a Java program to calculate the sum of elements in a list.',
        89: 'Write a Java program to find the average of elements in a list.',
        90: 'Write a Java program to check if a list contains a specific element.',
        91: 'Write a Java program to remove a specific element from a list.',
        92: 'Write a Java program to insert an element at a specific position in a list.',
        93: 'Write a Java program to replace an element in a list at a specific index.',
        94: 'Write a Java program to shuffle a list of elements.',
        95: 'Write a Java program to create a list of square numbers from 1 to N.',
        96: 'Write a Java program to find the common elements between two lists.',
        97: 'Write a Java program to find the unique elements in a list.',
        98: 'Write a Java program to implement a basic stack using an array.',
        99: 'Write a Java program to implement a basic queue using an array.',
        100: 'Write a Java program to sort a list of integers in descending order.'
    }

    medium = {
        1: 'Write a Java program to implement a binary search algorithm on a sorted array.',
        2: 'Write a Java program to find the shortest path in an unweighted graph using Breadth-First Search (BFS).',
        3: 'Write a Java program to implement a depth-first search (DFS) algorithm on a graph.',
        4: 'Write a Java program to sort a list of integers using the quicksort algorithm.',
        5: 'Write a Java program to sort a list of integers using the merge sort algorithm.',
        6: 'Write a Java program to implement a hash table using chaining for collision resolution.',
        7: 'Write a Java program to find the longest common subsequence (LCS) between two strings.',
        8: 'Write a Java program to implement a basic text editor with undo and redo functionalities using stacks.',
        9: 'Write a Java program to detect and remove loops in a linked list.',
        10: 'Write a Java program to find the maximum sum subarray using Kadane’s Algorithm.',
        11: 'Write a Java program to implement a priority queue using a binary heap.',
        12: 'Write a Java program to find the median of a stream of integers.',
        13: 'Write a Java program to solve the N-Queens problem using backtracking.',
        14: 'Write a Java program to generate all permutations of a given string.',
        15: 'Write a Java program to implement Dijkstra’s algorithm for finding the shortest path in a weighted graph.',
        16: 'Write a Java program to solve the Knapsack problem using dynamic programming.',
        17: 'Write a Java program to find all subsets of a given set.',
        18: 'Write a Java program to implement a Trie data structure and perform insertions and searches.',
        19: 'Write a Java program to find the longest palindrome substring in a given string.',
        20: 'Write a Java program to solve the subset sum problem using dynamic programming.',
        21: 'Write a Java program to convert an infix expression to a postfix expression.',
        22: 'Write a Java program to evaluate a postfix expression.',
        23: 'Write a Java program to find the shortest path between two nodes in a graph using A* algorithm.',
        24: 'Write a Java program to implement a doubly linked list and perform insertion, deletion, and traversal.',
        25: 'Write a Java program to find the shortest path in a weighted graph using Bellman-Ford algorithm.',
        26: 'Write a Java program to solve the Longest Increasing Subsequence (LIS) problem using dynamic programming.',
        27: 'Write a Java program to find the maximum product of two integers in an array.',
        28: 'Write a Java program to check if two strings are anagrams of each other.',
        29: 'Write a Java program to implement a circular queue using an array.',
        30: 'Write a Java program to implement a basic calculator with support for addition, subtraction, multiplication, and division.',
        31: 'Write a Java program to find the shortest path between all pairs of nodes in a graph using Floyd-Warshall algorithm.',
        32: 'Write a Java program to perform topological sorting on a directed acyclic graph (DAG).',
        33: 'Write a Java program to solve the Sudoku puzzle using backtracking.',
        34: 'Write a Java program to implement a basic LRU (Least Recently Used) cache.',
        35: 'Write a Java program to find the longest common prefix among an array of strings.',
        36: 'Write a Java program to determine if a string is a valid number (integer or floating-point).',
        37: 'Write a Java program to implement a balanced binary search tree (BST) and perform insertion and deletion.',
        38: 'Write a Java program to find all possible combinations that add up to a target value.',
        39: 'Write a Java program to implement a stack using two queues.',
        40: 'Write a Java program to find the shortest path in a grid with obstacles using A* algorithm.',
        41: 'Write a Java program to implement a basic text search algorithm (e.g., Knuth-Morris-Pratt).',
        42: 'Write a Java program to check if a given matrix is a magic square.',
        43: 'Write a Java program to find the longest substring with at most two distinct characters.',
        44: 'Write a Java program to find the number of connected components in an undirected graph.',
        45: 'Write a Java program to find the shortest path between two nodes in an unweighted grid using BFS.',
        46: 'Write a Java program to find the number of ways to climb stairs with a given number of steps.',
        47: 'Write a Java program to implement a basic graph traversal algorithm (BFS/DFS) on a weighted graph.',
        48: 'Write a Java program to find the longest path in a directed acyclic graph (DAG).',
        49: 'Write a Java program to find the median of two sorted arrays.',
        50: 'Write a Java program to find the minimum window substring that contains all characters of another string.',
        51: 'Write a Java program to implement a simple version of the Observer pattern.',
        52: 'Write a Java program to determine if a string contains all unique characters.',
        53: 'Write a Java program to compute the edit distance between two strings.',
        54: 'Write a Java program to find the maximum length of a subarray with equal number of 0s and 1s.',
        55: 'Write a Java program to find the maximum length of a contiguous subarray with sum equal to zero.',
        56: 'Write a Java program to find the longest repeating subsequence in a string.',
        57: 'Write a Java program to implement a basic binary tree and perform in-order, pre-order, and post-order traversals.',
        58: 'Write a Java program to find the intersection of two sorted arrays.',
        59: 'Write a Java program to perform matrix rotation by 90 degrees.',
        60: 'Write a Java program to determine if a given string is a valid palindrome considering only alphanumeric characters.',
        61: 'Write a Java program to find all possible subsets of a set with duplicate elements.',
        62: 'Write a Java program to find the maximum sum of a subarray using the Divide and Conquer approach.',
        63: 'Write a Java program to find the kth largest element in an unsorted array.',
        64: 'Write a Java program to implement a basic queue using two stacks.',
        65: 'Write a Java program to perform an in-place matrix transpose.',
        66: 'Write a Java program to count the number of islands in a 2D grid.',
        67: 'Write a Java program to find the smallest window in a string that contains all characters of another string.',
        68: 'Write a Java program to implement a binary search tree (BST) and find its height.',
        69: 'Write a Java program to find the longest path from the root to a leaf in a binary tree.',
        70: 'Write a Java program to find the number of ways to arrange N queens on an N x N chessboard such that no two queens threaten each other.',
        71: 'Write a Java program to find the longest subarray with at most K distinct elements.',
        72: 'Write a Java program to implement a basic priority queue using a binary heap.',
        73: 'Write a Java program to solve the coin change problem using dynamic programming.',
        74: 'Write a Java program to find all possible subsets of a set.',
        75: 'Write a Java program to find the longest consecutive sequence in an unsorted array.',
        76: 'Write a Java program to find the longest substring without repeating characters.',
        77: 'Write a Java program to implement a basic least recently used (LRU) cache.',
        78: 'Write a Java program to check if a given binary tree is a binary search tree (BST).',
        79: 'Write a Java program to find the shortest path in a weighted grid with obstacles.',
        80: 'Write a Java program to find the maximum length of a subarray with sum equal to a given value.',
        81: 'Write a Java program to implement a doubly linked list and perform insertion and deletion operations.',
        82: 'Write a Java program to find the longest common prefix among an array of strings.',
        83: 'Write a Java program to count the number of possible paths from the top-left to the bottom-right corner of a grid.',
        84: 'Write a Java program to find the maximum number of non-overlapping intervals from a list of intervals.',
        85: 'Write a Java program to find the longest increasing subsequence in an array of integers.',
        86: 'Write a Java program to find all combinations of a given length from a set of integers.',
        87: 'Write a Java program to determine if a given array can be partitioned into two subsets with equal sum.',
        88: 'Write a Java program to find the longest subarray with sum equal to a given value.',
        89: 'Write a Java program to find the median of two sorted arrays of different sizes.',
        90: 'Write a Java program to count the number of possible paths in a grid from the top-left to the bottom-right corner.',
        91: 'Write a Java program to find the longest palindrome in a given string.',
        92: 'Write a Java program to solve the longest increasing subsequence problem using a binary search approach.',
        93: 'Write a Java program to implement a basic version of the Chain of Responsibility pattern.',
        94: 'Write a Java program to implement a simple version of the Command pattern.',
        95: 'Write a Java program to solve the maximum subarray sum problem using a divide-and-conquer approach.',
        96: 'Write a Java program to find the number of ways to make change for a given amount of money using a set of coins.',
        97: 'Write a Java program to find the shortest path between two nodes in an undirected graph.',
        98: 'Write a Java program to implement a basic hash map using open addressing for collision resolution.',
        99: 'Write a Java program to check if a given array of integers contains a subarray with zero sum.',
        100: 'Write a Java program to find the maximum length of a contiguous subarray with a given sum.'
    }

    hard = {
        1: 'Write a Java program to implement the Aho-Corasick algorithm for multiple pattern string matching.',
        2: 'Write a Java program to solve the Travelling Salesman Problem (TSP) using dynamic programming.',
        3: 'Write a Java program to find the maximum flow in a network using the Ford-Fulkerson algorithm.',
        4: 'Write a Java program to solve the Knapsack problem using branch and bound technique.',
        5: 'Write a Java program to implement the K-means clustering algorithm from scratch.',
        6: 'Write a Java program to solve the N-Queens problem using constraint propagation.',
        7: 'Write a Java program to find the maximum subarray product in an array.',
        8: 'Write a Java program to solve the Sudoku puzzle using Constraint Satisfaction Problem (CSP) techniques.',
        9: 'Write a Java program to find the minimum cost to connect all points in a 2D plane (Minimum Spanning Tree).',
        10: 'Write a Java program to solve the Longest Common Subsequence (LCS) problem using memoization and dynamic programming.',
        11: 'Write a Java program to implement the Rabin-Karp algorithm for pattern searching.',
        12: 'Write a Java program to find all strongly connected components in a directed graph using Tarjan’s algorithm.',
        13: 'Write a Java program to solve the Minimum Edit Distance problem using dynamic programming.',
        14: 'Write a Java program to implement the PageRank algorithm for ranking web pages.',
        15: 'Write a Java program to solve the Matrix Chain Multiplication problem using dynamic programming.',
        16: 'Write a Java program to find the longest path in a weighted graph with positive weights using topological sorting.',
        17: 'Write a Java program to implement a Balanced Binary Search Tree (e.g., AVL Tree).',
        18: 'Write a Java program to find the maximum number of non-overlapping intervals.',
        19: 'Write a Java program to solve the 0/1 Knapsack problem using the branch and bound technique.',
        20: 'Write a Java program to implement the Karger's algorithm for finding the minimum cut of a graph.',
        21: 'Write a Java program to find the shortest path in a weighted graph with negative weights using the Bellman-Ford algorithm.',
        22: 'Write a Java program to implement the Ford-Fulkerson method for finding maximum flow in a flow network.',
        23: 'Write a Java program to solve the Longest Increasing Subsequence (LIS) problem using a segment tree.',
        24: 'Write a Java program to solve the Word Break problem using dynamic programming.',
        25: 'Write a Java program to implement a suffix tree for efficient substring searches.',
        26: 'Write a Java program to solve the Fractional Knapsack problem using a greedy approach.',
        27: 'Write a Java program to find the number of ways to partition a number into distinct parts.',
        28: 'Write a Java program to find the shortest path between all pairs of nodes in a weighted graph using the Floyd-Warshall algorithm.',
        29: 'Write a Java program to implement the Hopcroft-Karp algorithm for finding maximum matching in bipartite graphs.',
        30: 'Write a Java program to solve the Longest Common Substring (LCS) problem using dynamic programming.',
        31: 'Write a Java program to find the maximum sum of a subarray with at least one element using Kadane’s Algorithm.',
        32: 'Write a Java program to solve the Skyline Problem using a sweep line algorithm.',
        33: 'Write a Java program to implement the Boyer-Moore string matching algorithm.',
        34: 'Write a Java program to solve the Traveling Salesman Problem (TSP) using genetic algorithms.',
        35: 'Write a Java program to find the longest path in a weighted graph with negative weights using the Bellman-Ford algorithm.',
        36: 'Write a Java program to implement the Knuth-Morris-Pratt (KMP) string matching algorithm.',
        37: 'Write a Java program to find the longest subsequence of a given sequence with specific constraints.',
        38: 'Write a Java program to find the minimum number of operations required to convert one string to another.',
        39: 'Write a Java program to solve the Maximum Subarray Sum with at most one allowed change.',
        40: 'Write a Java program to solve the Minimum Window Substring problem using a sliding window approach.',
        41: 'Write a Java program to implement the Edmonds-Karp algorithm for finding maximum flow in a network.',
        42: 'Write a Java program to solve the Traveling Salesman Problem (TSP) using dynamic programming and memoization.',
        43: 'Write a Java program to find the longest path in a matrix with specific constraints using dynamic programming.',
        44: 'Write a Java program to implement a persistent segment tree for range queries.',
        45: 'Write a Java program to solve the Subset Sum problem using dynamic programming with space optimization.',
        46: 'Write a Java program to find the maximum subarray sum with a given length.',
        47: 'Write a Java program to solve the Cutting Rod problem using dynamic programming.',
        48: 'Write a Java program to find the maximum product of k numbers in an array.',
        49: 'Write a Java program to find the longest substring with at most k distinct characters.',
        50: 'Write a Java program to solve the Job Scheduling problem with deadlines and profits.',
        51: 'Write a Java program to solve the Stock Buy and Sell problem with multiple transactions allowed.',
        52: 'Write a Java program to implement the Tarjan’s algorithm for finding strongly connected components in a graph.',
        53: 'Write a Java program to solve the Maximum Product Subarray problem using dynamic programming.',
        54: 'Write a Java program to find the minimum number of coins required to make a given amount using a set of coins.',
        55: 'Write a Java program to solve the All-Pairs Shortest Path problem using the Floyd-Warshall algorithm.',
        56: 'Write a Java program to find the longest common prefix among multiple strings using a divide-and-conquer approach.',
        57: 'Write a Java program to find the maximum sum rectangle in a 2D matrix.',
        58: 'Write a Java program to solve the Subarray with Given Sum problem using a sliding window approach.',
        59: 'Write a Java program to find the longest path in a directed acyclic graph (DAG) with topological sorting.',
        60: 'Write a Java program to implement the Rabin-Karp algorithm for substring search with hashing.',
        61: 'Write a Java program to solve the Maximum Subarray Sum problem using divide-and-conquer.',
        62: 'Write a Java program to find the minimum number of edits required to convert one string to another using dynamic programming.',
        63: 'Write a Java program to implement the Chinese Remainder Theorem for solving congruences.',
        64: 'Write a Java program to solve the Maximum Bipartite Matching problem using the Hopcroft-Karp algorithm.',
        65: 'Write a Java program to find the longest contiguous subarray with a given sum.',
        66: 'Write a Java program to solve the Longest Palindromic Substring problem using dynamic programming.',
        67: 'Write a Java program to solve the Word Ladder problem using BFS.',
        68: 'Write a Java program to find the maximum number of non-overlapping intervals using a greedy algorithm.',
        69: 'Write a Java program to find the longest increasing path in a matrix.',
        70: 'Write a Java program to solve the Maximum Subarray Sum with at most two allowed changes.',
        71: 'Write a Java program to implement a suffix array for fast substring search.',
        72: 'Write a Java program to solve the Job Sequencing problem using a greedy approach.',
        73: 'Write a Java program to find the longest subsequence of a given sequence with specific constraints.',
        74: 'Write a Java program to implement the Knapsack problem using a 2D dynamic programming table.',
        75: 'Write a Java program to find the maximum length of a contiguous subarray with a sum equal to a given value.',
        76: 'Write a Java program to solve the Maximum Sum Rectangle problem using dynamic programming.',
        77: 'Write a Java program to find the longest common subsequence between two strings using memoization.',
        78: 'Write a Java program to solve the 3SUM problem using a two-pointer technique.',
        79: 'Write a Java program to solve the Maximum Subarray Sum with exactly K elements.',
        80: 'Write a Java program to implement a binary indexed tree (Fenwick tree) for range sum queries.',
        81: 'Write a Java program to find the longest common subsequence with specific constraints using dynamic programming.',
        82: 'Write a Java program to solve the Maximum Product Subarray problem using a greedy approach.',
        83: 'Write a Java program to find the longest path in a graph with positive and negative weights using Bellman-Ford algorithm.',
        84: 'Write a Java program to solve the Minimum Number of Jumps problem using dynamic programming.',
        85: 'Write a Java program to find the shortest path between all pairs of nodes in a graph using Dijkstra’s algorithm.',
        86: 'Write a Java program to find the minimum cost of constructing a path in a weighted grid.',
        87: 'Write a Java program to solve the Minimum Spanning Tree problem using Prim’s algorithm.',
        88: 'Write a Java program to find the longest subsequence with specific constraints using memoization.',
        89: 'Write a Java program to solve the Coin Change problem using dynamic programming with space optimization.',
        90: 'Write a Java program to find the maximum number of non-overlapping intervals with a given start and end time.',
        91: 'Write a Java program to solve the Maximum Subarray Sum problem using divide-and-conquer approach.',
        92: 'Write a Java program to solve the Maximum Sum of Non-Adjacent Elements problem using dynamic programming.',
        93: 'Write a Java program to find the shortest path in a weighted grid using Dijkstra’s algorithm.',
        94: 'Write a Java program to solve the Minimum Edit Distance problem using recursive and memoized approach.',
        95: 'Write a Java program to implement a basic version of the A* search algorithm for pathfinding.',
        96: 'Write a Java program to find the longest increasing subsequence in a sequence using a segment tree.',
        97: 'Write a Java program to solve the Maximum Subarray Sum problem with at most one allowed change using dynamic programming.',
        98: 'Write a Java program to implement a trie data structure with insertion and search functionalities.',
        99: 'Write a Java program to solve the Maximum Bipartite Matching problem using augmenting paths.',
        100: 'Write a Java program to find the longest path in a matrix with obstacles using a dynamic programming approach.'
    }


    @classmethod
    def get_questions(cls, num_questions_to_generate, level):
        if level == 'beginner':
            question_pool = cls.beginner
        elif level == 'medium':
            question_pool = cls.medium
        elif level == 'hard':
            question_pool = cls.hard
        else:
            print(f"Unsupported level: {level}")
            return {}

        selected_keys = random.sample(list(question_pool.keys()), k=num_questions_to_generate)
        selected_questions = {key: question_pool[key] for key in selected_keys}

        return selected_questions

def questions(num_questions_to_generate, level):
    return Java.get_questions(num_questions_to_generate, level)
