import random

class Cpp:
    beginner = {
        1: 'Write a C++ program to add two integers.',
        2: 'Write a C++ program to find the largest of three numbers.',
        3: 'Write a C++ program to check if a number is even or odd.',
        4: 'Write a C++ program to find the factorial of a number using a loop.',
        5: 'Write a C++ program to reverse a string.',
        6: 'Write a C++ program to check if a number is prime.',
        7: 'Write a C++ program to calculate the sum of digits of a number.',
        8: 'Write a C++ program to find the Fibonacci sequence up to a given number.',
        9: 'Write a C++ program to sort an array of integers in ascending order.',
        10: 'Write a C++ program to find the largest element in an array.',
        11: 'Write a C++ program to find the smallest element in an array.',
        12: 'Write a C++ program to perform basic arithmetic operations (addition, subtraction, multiplication, division).',
        13: 'Write a C++ program to check if a string is a palindrome.',
        14: 'Write a C++ program to count the number of vowels in a string.',
        15: 'Write a C++ program to convert a temperature from Celsius to Fahrenheit.',
        16: 'Write a C++ program to find the sum of first N natural numbers.',
        17: 'Write a C++ program to print the multiplication table of a number.',
        18: 'Write a C++ program to implement a basic calculator using switch case.',
        19: 'Write a C++ program to find the length of a string.',
        20: 'Write a C++ program to remove all duplicates from a string.',
        21: 'Write a C++ program to count the number of words in a sentence.',
        22: 'Write a C++ program to swap two numbers using a temporary variable.',
        23: 'Write a C++ program to find the average of N numbers.',
        24: 'Write a C++ program to print a pattern of stars.',
        25: 'Write a C++ program to check if a number is a perfect number.',
        26: 'Write a C++ program to find the greatest common divisor (GCD) of two numbers.',
        27: 'Write a C++ program to find the least common multiple (LCM) of two numbers.',
        28: 'Write a C++ program to check if a year is a leap year.',
        29: 'Write a C++ program to perform matrix addition.',
        30: 'Write a C++ program to find the transpose of a matrix.',
        31: 'Write a C++ program to implement a simple linear search algorithm.',
        32: 'Write a C++ program to implement a simple binary search algorithm.',
        33: 'Write a C++ program to find the sum of an array using a function.',
        34: 'Write a C++ program to find the largest of three numbers using a function.',
        35: 'Write a C++ program to check if a number is a Armstrong number.',
        36: 'Write a C++ program to find the factorial of a number using recursion.',
        37: 'Write a C++ program to calculate the power of a number using recursion.',
        38: 'Write a C++ program to merge two arrays.',
        39: 'Write a C++ program to sort an array using the bubble sort algorithm.',
        40: 'Write a C++ program to implement the insertion sort algorithm.',
        41: 'Write a C++ program to implement the selection sort algorithm.',
        42: 'Write a C++ program to find the number of elements in an array.',
        43: 'Write a C++ program to reverse an array using a function.',
        44: 'Write a C++ program to find the median of an array.',
        45: 'Write a C++ program to find the mode of an array.',
        46: 'Write a C++ program to check if a number is a perfect square.',
        47: 'Write a C++ program to find the prime numbers in a given range.',
        48: 'Write a C++ program to find the sum of first N even numbers.',
        49: 'Write a C++ program to find the sum of first N odd numbers.',
        50: 'Write a C++ program to check if a number is a palindrome.',
        51: 'Write a C++ program to implement a basic stack using an array.',
        52: 'Write a C++ program to implement a basic queue using an array.',
        53: 'Write a C++ program to implement a basic linked list.',
        54: 'Write a C++ program to add elements to a linked list.',
        55: 'Write a C++ program to delete elements from a linked list.',
        56: 'Write a C++ program to find the maximum element in a linked list.',
        57: 'Write a C++ program to find the minimum element in a linked list.',
        58: 'Write a C++ program to count the number of nodes in a linked list.',
        59: 'Write a C++ program to reverse a linked list.',
        60: 'Write a C++ program to check if a linked list is empty.',
        61: 'Write a C++ program to find the middle element of a linked list.',
        62: 'Write a C++ program to find the length of a linked list.',
        63: 'Write a C++ program to insert an element at the beginning of a linked list.',
        64: 'Write a C++ program to insert an element at the end of a linked list.',
        65: 'Write a C++ program to insert an element after a given node in a linked list.',
        66: 'Write a C++ program to delete an element from the beginning of a linked list.',
        67: 'Write a C++ program to delete an element from the end of a linked list.',
        68: 'Write a C++ program to delete a given element from a linked list.',
        69: 'Write a C++ program to concatenate two strings.',
        70: 'Write a C++ program to find the substring of a given string.',
        71: 'Write a C++ program to count the occurrences of a substring in a string.',
        72: 'Write a C++ program to replace a substring in a string.',
        73: 'Write a C++ program to find the length of a substring.',
        74: 'Write a C++ program to find the last occurrence of a character in a string.',
        75: 'Write a C++ program to convert a string to uppercase.',
        76: 'Write a C++ program to convert a string to lowercase.',
        77: 'Write a C++ program to trim whitespace from a string.',
        78: 'Write a C++ program to check if a string contains only digits.',
        79: 'Write a C++ program to check if a string contains only alphabets.',
        80: 'Write a C++ program to find the first occurrence of a character in a string.',
        81: 'Write a C++ program to find the last occurrence of a substring in a string.',
        82: 'Write a C++ program to convert an integer to a string.',
        83: 'Write a C++ program to convert a string to an integer.',
        84: 'Write a C++ program to handle exceptions using try-catch.',
        85: 'Write a C++ program to perform file reading and writing.',
        86: 'Write a C++ program to demonstrate the use of constructors.',
        87: 'Write a C++ program to demonstrate the use of destructors.',
        88: 'Write a C++ program to implement a simple class with member functions.',
        89: 'Write a C++ program to demonstrate function overloading.',
        90: 'Write a C++ program to demonstrate operator overloading.',
        91: 'Write a C++ program to demonstrate inheritance.',
        92: 'Write a C++ program to demonstrate polymorphism.',
        93: 'Write a C++ program to create a simple user-defined exception.',
        94: 'Write a C++ program to use standard template library (STL) vectors.',
        95: 'Write a C++ program to use standard template library (STL) maps.',
        96: 'Write a C++ program to use standard template library (STL) sets.',
        97: 'Write a C++ program to implement a basic stack using linked list.',
        98: 'Write a C++ program to implement a basic queue using linked list.',
        99: 'Write a C++ program to implement a simple hash table.',
        100: 'Write a C++ program to perform binary search on a sorted array.'
    }

    medium = {
        1: 'Write a C++ program to implement a binary search tree (BST) and perform insertion, deletion, and search operations.',
        2: 'Write a C++ program to implement a priority queue using a heap.',
        3: 'Write a C++ program to perform matrix multiplication.',
        4: 'Write a C++ program to find the shortest path in a graph using Dijkstra’s algorithm.',
        5: 'Write a C++ program to solve the N-Queens problem using backtracking.',
        6: 'Write a C++ program to implement the quicksort algorithm.',
        7: 'Write a C++ program to solve the knapsack problem using dynamic programming.',
        8: 'Write a C++ program to find the longest common subsequence (LCS) between two strings.',
        9: 'Write a C++ program to implement a doubly linked list with insertion and deletion operations.',
        10: 'Write a C++ program to detect a cycle in a directed graph using depth-first search (DFS).',
        11: 'Write a C++ program to implement a simple hash map with separate chaining for collision resolution.',
        12: 'Write a C++ program to find the median of two sorted arrays.',
        13: 'Write a C++ program to perform a depth-first search (DFS) traversal of a graph.',
        14: 'Write a C++ program to perform a breadth-first search (BFS) traversal of a graph.',
        15: 'Write a C++ program to implement a circular queue using an array.',
        16: 'Write a C++ program to find the longest increasing subsequence in an array.',
        17: 'Write a C++ program to solve the coin change problem using dynamic programming.',
        18: 'Write a C++ program to find the minimum spanning tree of a graph using Kruskal’s algorithm.',
        19: 'Write a C++ program to implement a basic stack using two queues.',
        20: 'Write a C++ program to implement a basic queue using two stacks.',
        21: 'Write a C++ program to find all the permutations of a given string.',
        22: 'Write a C++ program to find the k-th largest element in an unsorted array.',
        23: 'Write a C++ program to find the shortest path in a weighted graph using Bellman-Ford algorithm.',
        24: 'Write a C++ program to solve the longest common prefix problem for a list of strings.',
        25: 'Write a C++ program to find all subsets of a given set.',
        26: 'Write a C++ program to solve the subset sum problem using backtracking.',
        27: 'Write a C++ program to find the longest path in a weighted directed acyclic graph (DAG).',
        28: 'Write a C++ program to implement a basic trie data structure for string storage and retrieval.',
        29: 'Write a C++ program to find the smallest window in a string containing all characters of another string.',
        30: 'Write a C++ program to perform a topological sort of a directed graph.',
        31: 'Write a C++ program to solve the job scheduling problem with deadlines and profits.',
        32: 'Write a C++ program to perform polynomial addition and multiplication.',
        33: 'Write a C++ program to implement a basic version of the A* search algorithm for pathfinding.',
        34: 'Write a C++ program to find the maximum subarray sum using Kadane’s algorithm.',
        35: 'Write a C++ program to implement the radix sort algorithm.',
        36: 'Write a C++ program to solve the maximum flow problem in a network using the Ford-Fulkerson method.',
        37: 'Write a C++ program to find the longest substring with no repeating characters.',
        38: 'Write a C++ program to solve the balanced parentheses problem using a stack.',
        39: 'Write a C++ program to solve the Sudoku puzzle using backtracking.',
        40: 'Write a C++ program to find the longest palindrome substring in a given string.',
        41: 'Write a C++ program to implement a segment tree for range queries.',
        42: 'Write a C++ program to solve the string interleaving problem.',
        43: 'Write a C++ program to find the maximum number of non-overlapping intervals.',
        44: 'Write a C++ program to implement the Bellman-Ford algorithm for shortest paths with negative weights.',
        45: 'Write a C++ program to solve the longest common substring problem using dynamic programming.',
        46: 'Write a C++ program to find all strongly connected components in a directed graph using Tarjan’s algorithm.',
        47: 'Write a C++ program to implement a simple linear regression model.',
        48: 'Write a C++ program to find the longest common subsequence with constraints on the indices.',
        49: 'Write a C++ program to implement the K-means clustering algorithm.',
        50: 'Write a C++ program to perform efficient string matching using the Knuth-Morris-Pratt (KMP) algorithm.',
        51: 'Write a C++ program to solve the matrix chain multiplication problem using dynamic programming.',
        52: 'Write a C++ program to find the shortest path between all pairs of nodes in a graph using Floyd-Warshall algorithm.',
        53: 'Write a C++ program to solve the maximum rectangle problem in a binary matrix.',
        54: 'Write a C++ program to solve the longest palindromic subsequence problem using dynamic programming.',
        55: 'Write a C++ program to implement a simple version of the Chain of Responsibility pattern.',
        56: 'Write a C++ program to solve the longest increasing subsequence problem using binary search.',
        57: 'Write a C++ program to find the number of ways to make change for a given amount of money using different denominations.',
        58: 'Write a C++ program to find the maximum length of a contiguous subarray with a given sum.',
        59: 'Write a C++ program to find the number of ways to partition a number into distinct parts.',
        60: 'Write a C++ program to find the maximum subarray sum with at most one allowed change.',
        61: 'Write a C++ program to implement a simple binary indexed tree (Fenwick tree) for range queries.',
        62: 'Write a C++ program to find the maximum number of non-overlapping intervals with given start and end times.',
        63: 'Write a C++ program to solve the minimum window substring problem using sliding window technique.',
        64: 'Write a C++ program to implement the Hopcroft-Karp algorithm for maximum matching in bipartite graphs.',
        65: 'Write a C++ program to solve the Subset Sum problem using dynamic programming.',
        66: 'Write a C++ program to find the longest increasing path in a matrix with positive values.',
        67: 'Write a C++ program to find the longest palindromic substring using expand-around-center technique.',
        68: 'Write a C++ program to find the maximum sum rectangle in a 2D matrix.',
        69: 'Write a C++ program to implement a simple hash table with open addressing for collision resolution.',
        70: 'Write a C++ program to implement a version of the sliding window maximum algorithm.',
        71: 'Write a C++ program to solve the maximum product subarray problem using dynamic programming.',
        72: 'Write a C++ program to solve the balanced partition problem using backtracking.',
        73: 'Write a C++ program to find the longest common subsequence with constraints on the indices using dynamic programming.',
        74: 'Write a C++ program to find the shortest path between two nodes in an undirected graph using BFS.',
        75: 'Write a C++ program to implement a simple directed acyclic graph (DAG) and find its topological sort.',
        76: 'Write a C++ program to find the minimum number of jumps required to reach the end of an array.',
        77: 'Write a C++ program to solve the binary search problem on a rotated sorted array.',
        78: 'Write a C++ program to find the minimum spanning tree of a graph using Prim’s algorithm.',
        79: 'Write a C++ program to implement a simple version of the Command pattern.',
        80: 'Write a C++ program to find the number of islands in a binary matrix.',
        81: 'Write a C++ program to implement a simple version of the Memento pattern.',
        82: 'Write a C++ program to solve the 0/1 knapsack problem using dynamic programming.',
        83: 'Write a C++ program to find the longest path in a matrix with obstacles using dynamic programming.',
        84: 'Write a C++ program to find the maximum sum subarray with exactly K elements.',
        85: 'Write a C++ program to implement a basic version of the Builder pattern.',
        86: 'Write a C++ program to solve the unique paths problem in a grid with obstacles.',
        87: 'Write a C++ program to find the longest common prefix among multiple strings using divide-and-conquer.',
        88: 'Write a C++ program to implement a basic version of the Singleton pattern.',
        89: 'Write a C++ program to solve the permutation sequence problem.',
        90: 'Write a C++ program to find the maximum sum subarray with at most one allowed change.',
        91: 'Write a C++ program to find the longest palindromic subsequence using dynamic programming.',
        92: 'Write a C++ program to implement a basic version of the Observer pattern.',
        93: 'Write a C++ program to solve the longest increasing subsequence problem using dynamic programming with binary search.',
        94: 'Write a C++ program to solve the string reconstruction problem using dynamic programming.',
        95: 'Write a C++ program to find the minimum path sum in a grid from top-left to bottom-right.',
        96: 'Write a C++ program to solve the maximum rectangle area problem in a binary matrix.',
        97: 'Write a C++ program to find the number of ways to partition an integer into distinct parts using dynamic programming.',
        98: 'Write a C++ program to find the shortest path in an unweighted graph using BFS.',
        99: 'Write a C++ program to find the maximum sum of a contiguous subarray with exactly K elements.',
        100: 'Write a C++ program to solve the longest common subsequence problem with constraints using memoization.'
    }

    hard = {
        1: 'Write a C++ program to implement the A* search algorithm for pathfinding in a grid with obstacles.',
        2: 'Write a C++ program to solve the maximum flow problem using the Edmonds-Karp algorithm.',
        3: 'Write a C++ program to implement a suffix array and solve substring search problems efficiently.',
        4: 'Write a C++ program to solve the Traveling Salesman Problem (TSP) using dynamic programming with bit masking.',
        5: 'Write a C++ program to find the strongly connected components of a directed graph using Kosaraju’s algorithm.',
        6: 'Write a C++ program to solve the 0/1 knapsack problem with large input sizes using advanced techniques like meet-in-the-middle.',
        7: 'Write a C++ program to implement a segment tree with lazy propagation for range updates and queries.',
        8: 'Write a C++ program to find the minimum cut of a flow network using the Max-Flow Min-Cut Theorem.',
        9: 'Write a C++ program to implement an advanced version of the Trie data structure with support for prefix queries.',
        10: 'Write a C++ program to solve the maximum bipartite matching problem using the Hopcroft-Karp algorithm.',
        11: 'Write a C++ program to solve the Longest Palindromic Substring problem using Manacher’s algorithm.',
        12: 'Write a C++ program to implement an efficient version of the K-means clustering algorithm.',
        13: 'Write a C++ program to solve the problem of finding all Hamiltonian paths in a graph.',
        14: 'Write a C++ program to find the minimum number of moves required to solve the 15-puzzle problem using A* search.',
        15: 'Write a C++ program to find the longest common subsequence (LCS) of three sequences using dynamic programming.',
        16: 'Write a C++ program to solve the problem of finding all unique permutations of a given string with duplicates.',
        17: 'Write a C++ program to implement the Tarjan’s algorithm for finding strongly connected components in a directed graph.',
        18: 'Write a C++ program to find the minimum window substring that contains all characters of a given string using advanced techniques.',
        19: 'Write a C++ program to solve the problem of finding the maximum rectangle area in a binary matrix using dynamic programming.',
        20: 'Write a C++ program to implement an efficient version of the Suffix Tree data structure.',
        21: 'Write a C++ program to solve the problem of finding the longest common prefix among an array of strings using a divide-and-conquer approach.',
        22: 'Write a C++ program to solve the problem of finding the smallest subarray with a sum greater than or equal to a given value.',
        23: 'Write a C++ program to find the maximum number of non-overlapping intervals in a given list of intervals.',
        24: 'Write a C++ program to solve the problem of finding the longest path in a directed acyclic graph (DAG) using dynamic programming.',
        25: 'Write a C++ program to implement a data structure for fast retrieval of k smallest elements from a large dataset.',
        26: 'Write a C++ program to solve the problem of finding all possible combinations of k numbers that sum up to a given target.',
        27: 'Write a C++ program to solve the problem of finding the maximum sum subarray with exactly k distinct elements.',
        28: 'Write a C++ program to implement a data structure for efficiently finding the median of a stream of numbers.',
        29: 'Write a C++ program to solve the problem of finding the minimum number of operations to transform one string into another.',
        30: 'Write a C++ program to solve the problem of finding the maximum subarray sum with at most one allowed swap.',
        31: 'Write a C++ program to implement the Ford-Fulkerson algorithm for computing maximum flow in a flow network.',
        32: 'Write a C++ program to solve the problem of finding the minimum number of operations required to make two strings anagrams.',
        33: 'Write a C++ program to implement the Advanced Priority Queue using a balanced binary search tree.',
        34: 'Write a C++ program to solve the problem of finding the shortest path in a graph with negative edge weights using the Bellman-Ford algorithm.',
        35: 'Write a C++ program to implement the Knuth-Morris-Pratt (KMP) algorithm for substring search with pre-processing.',
        36: 'Write a C++ program to solve the problem of finding the number of distinct subsequences in a string.',
        37: 'Write a C++ program to solve the problem of computing the maximum sum of a non-adjacent subsequence.',
        38: 'Write a C++ program to implement an efficient solution for the Longest Increasing Subsequence problem using binary search.',
        39: 'Write a C++ program to solve the problem of finding the largest rectangular area in a histogram using a stack-based approach.',
        40: 'Write a C++ program to implement the Convex Hull algorithm using the Graham scan or Andrew’s monotone chain method.',
        41: 'Write a C++ program to solve the problem of finding the smallest subarray with a sum equal to a given target using binary search.',
        42: 'Write a C++ program to find the maximum number of ways to partition a number into a sum of distinct positive integers.',
        43: 'Write a C++ program to solve the problem of finding the shortest path with exactly k edges in a weighted graph.',
        44: 'Write a C++ program to find the longest common subsequence in a grid with specific constraints.',
        45: 'Write a C++ program to solve the problem of finding the maximum sum of non-adjacent elements with at most one allowed change.',
        46: 'Write a C++ program to implement the Boyer-Moore string matching algorithm for substring search.',
        47: 'Write a C++ program to solve the problem of finding the number of ways to tile a 2xN grid using dominoes.',
        48: 'Write a C++ program to find the maximum subarray sum with exactly k elements and a given range.',
        49: 'Write a C++ program to solve the problem of finding the minimum number of operations required to make two strings identical.',
        50: 'Write a C++ program to implement an efficient solution for the Maximum Subarray Problem using divide-and-conquer.',
        51: 'Write a C++ program to solve the problem of finding the longest increasing subsequence in a matrix with constraints.',
        52: 'Write a C++ program to implement a version of the Monte Carlo method for approximate solutions of complex problems.',
        53: 'Write a C++ program to find the longest common subsequence in a set of strings using advanced techniques.',
        54: 'Write a C++ program to implement the Segment Tree with support for range queries and range updates.',
        55: 'Write a C++ program to solve the problem of computing the number of unique paths in a grid with obstacles.',
        56: 'Write a C++ program to find the maximum product of a contiguous subarray using a dynamic programming approach.',
        57: 'Write a C++ program to implement a version of the Suffix Automaton data structure.',
        58: 'Write a C++ program to solve the problem of finding the maximum sum of a rectangular submatrix in a 2D matrix.',
        59: 'Write a C++ program to implement an efficient version of the Floyd-Warshall algorithm for all-pairs shortest paths.',
        60: 'Write a C++ program to solve the problem of finding the maximum number of non-overlapping intervals with given constraints.',
        61: 'Write a C++ program to implement the Dynamic Connectivity problem using Union-Find data structure.',
        62: 'Write a C++ program to find the longest palindromic subsequence in a string using dynamic programming.',
        63: 'Write a C++ program to solve the problem of finding the maximum sum of a contiguous subarray with exactly k elements.',
        64: 'Write a C++ program to find the smallest window in a string that contains all characters of another string using sliding window technique.',
        65: 'Write a C++ program to solve the problem of finding the longest common prefix among a set of strings using advanced techniques.',
        66: 'Write a C++ program to implement a version of the Disjoint Set Union (DSU) data structure for advanced applications.',
        67: 'Write a C++ program to find the maximum number of ways to partition a string into palindromes.',
        68: 'Write a C++ program to solve the problem of finding the minimum number of edits required to transform one string into another.',
        69: 'Write a C++ program to implement a version of the Maximum Bipartite Matching algorithm using augmenting paths.',
        70: 'Write a C++ program to solve the problem of finding the longest common subsequence with specific constraints on the indices.',
        71: 'Write a C++ program to find the maximum number of distinct subsequences of a given length in a string.',
        72: 'Write a C++ program to implement the LRU (Least Recently Used) cache algorithm using a doubly linked list and a hash map.',
        73: 'Write a C++ program to solve the problem of finding the shortest path in a weighted grid using advanced techniques.',
        74: 'Write a C++ program to solve the problem of finding the maximum number of unique substrings of a given length in a string.',
        75: 'Write a C++ program to find the longest increasing subsequence with constraints on the indices using advanced dynamic programming techniques.',
        76: 'Write a C++ program to implement a version of the Dynamic Programming approach for solving the Longest Common Substring problem.',
        77: 'Write a C++ program to solve the problem of finding the maximum number of ways to partition a set into subsets with distinct sums.',
        78: 'Write a C++ program to find the minimum path sum in a matrix with obstacles using a modified Dijkstra’s algorithm.',
        79: 'Write a C++ program to implement the Borůvka’s algorithm for finding the minimum spanning tree in a graph.',
        80: 'Write a C++ program to solve the problem of finding the maximum number of non-overlapping substrings with given constraints.',
        81: 'Write a C++ program to find the longest common subsequence in a grid with multiple constraints using advanced techniques.',
        82: 'Write a C++ program to solve the problem of finding the maximum number of ways to partition a number into distinct positive integers.',
        83: 'Write a C++ program to implement a version of the Fast Fourier Transform (FFT) for polynomial multiplication.',
        84: 'Write a C++ program to solve the problem of finding the longest increasing subsequence in a matrix with specific constraints.',
        85: 'Write a C++ program to solve the problem of finding the number of unique paths in a grid with obstacles and specific constraints.',
        86: 'Write a C++ program to find the maximum product of a subarray with exactly k elements using advanced dynamic programming techniques.',
        87: 'Write a C++ program to implement a version of the Hopcroft-Karp algorithm for maximum matching in bipartite graphs with edge weights.',
        88: 'Write a C++ program to solve the problem of finding the maximum sum of a contiguous subarray with at most one allowed modification.',
        89: 'Write a C++ program to find the minimum number of operations to convert a string into another string using advanced techniques.',
        90: 'Write a C++ program to solve the problem of finding the maximum number of distinct substrings with a given length and constraints.',
        91: 'Write a C++ program to implement the Suffix Automaton for efficient string operations and substring queries.',
        92: 'Write a C++ program to solve the problem of finding the maximum sum rectangle in a 2D matrix using advanced dynamic programming techniques.',
        93: 'Write a C++ program to find the longest increasing subsequence with multiple constraints on the indices using dynamic programming.',
        94: 'Write a C++ program to implement a version of the Edmonds-Karp algorithm for solving the maximum flow problem with additional constraints.',
        95: 'Write a C++ program to solve the problem of finding the maximum number of unique palindromic subsequences in a string.',
        96: 'Write a C++ program to implement the Bloom Filter data structure for approximate set membership testing.',
        97: 'Write a C++ program to solve the problem of finding the number of distinct substrings of a given string using advanced techniques.',
        98: 'Write a C++ program to find the longest common prefix among multiple strings with constraints on the indices using advanced techniques.',
        99: 'Write a C++ program to implement the Maximum Subarray Sum Problem using the Divide and Conquer approach.',
        100: 'Write a C++ program to solve the problem of finding the smallest subarray with a sum equal to a given target using advanced techniques.'
    }

    @classmethod
    def get_questions(cls, num_questions_to_generate, level):
        if level == 'beginner':
            question_pool = cls.beginner
        elif level == 'medium':
            question_pool = cls.medium
        elif level == 'hard':
            question_pool = cls.hard
        else:
            print(f"Unsupported level: {level}")
            return {}

        selected_keys = random.sample(list(question_pool.keys()), k=num_questions_to_generate)
        selected_questions = {key: question_pool[key] for key in selected_keys}

        return selected_questions

def questions(num_questions_to_generate, level):
    return Cpp.get_questions(num_questions_to_generate, level)
